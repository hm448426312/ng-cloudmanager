import { ElementRef, OnInit, EventEmitter, Renderer, AfterViewInit, ChangeDetectorRef } from '@angular/core';
import { TreeComponent } from '../tree/tree.component';
export declare class SelectComponent implements OnInit, AfterViewInit {
    private renderer;
    private cdr;
    firstLoad: boolean;
    optionList: any;
    required: boolean;
    dropUp: boolean;
    disable: boolean;
    treeSearch: boolean;
    isReadonly: boolean;
    displayField: string;
    outputField: string;
    width: string;
    maxHeight: string;
    isMultiple: boolean;
    isTree: boolean;
    noClear: boolean;
    __treeParams: any;
    firstLoadTree: boolean;
    treeParams: any;
    _treeParams: any;
    treeCheckEvent: EventEmitter<{}>;
    treeCheckData: EventEmitter<{}>;
    treeClickEvent: EventEmitter<{}>;
    changeValueEvent: EventEmitter<{}>;
    selectBlurEvent: EventEmitter<{}>;
    inputSelect: ElementRef;
    dropBtn: ElementRef;
    dropList: ElementRef;
    tree: TreeComponent;
    selectContainer: ElementRef;
    currentValue: string;
    keyword: string;
    showThis: boolean;
    isFocus: boolean;
    _currentSelect: any;
    showDropFlag: boolean;
    currentSelect: any;
    constructor(renderer: Renderer, cdr: ChangeDetectorRef);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    afterViewInit(): void;
    calcInvalid(): boolean;
    searchTree(ev: string): void;
    changeCurrentValue(): void;
    onDocumentClick(ev: any): void;
    filter(data: any, keyword: string): any;
    blurEvent(ev: any): void;
    confirm(): void;
    changeValue(option: any): void;
    selectValue(item: any): void;
    clearValue(): void;
    trackByIndex(index: number, value: any): number;
    treeCheck(event: any): void;
    treeClick(event: any): void;
    arrStringJoin(arr: Array<any>): any;
    getSelectVal(): any;
    showSourceDrop(): void;
    hideSourceDrop(): void;
    toggleSourceDrop(): void;
    clearInputValue(ev: any): void;
}
