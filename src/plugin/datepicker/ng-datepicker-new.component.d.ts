import { OnInit, EventEmitter, OnChanges, ElementRef, OnDestroy } from '@angular/core';
export declare class NgDatepickerNewComponent implements OnInit, OnChanges, OnDestroy {
    DatePickerBox: ElementRef;
    ngModelChange: EventEmitter<any>;
    canClear: boolean;
    offset: string;
    displayDate: string;
    isHidden: boolean;
    showTodayBtn: boolean;
    placeholder: string;
    width: string;
    _type: string;
    type: string;
    _date: string;
    date: string;
    language: string;
    minDate: Date;
    maxDate: Date;
    showType: string;
    maxYear: number;
    maxMonth: number;
    minYear: number;
    minMonth: number;
    weekTitleEn: string[];
    weekTitleZh: string[];
    monthDays: number[];
    dates: Array<any[]>;
    monthArray: number[][];
    quarterArray: number[][];
    yearArray: Array<Array<number>>;
    actYear: number;
    actMonth: number;
    actDay: number;
    showYear: number;
    showMonth: number;
    showQuarter: number;
    showDay: number;
    selectedDate: any;
    constructor();
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(): void;
    clearDate(): void;
    initDatePicker(date: Date): void;
    resetCalendar(year: number, month: number): void;
    calCalendar(): void;
    initInput(): void;
    calMonthEndDay(y: number, m: number, num: number): number;
    clearCalendar(): void;
    renderTitle(): void;
    onDocumentClick(ev: any): void;
    toggleCalendar(isHidden?: boolean): void;
    toggleYearDrop(): void;
    toggleMonthDrop(): void;
    selectYear(ev: any, year: number): void;
    selectMonth(ev: any, month: number): void;
    selectQuarter(quarter: number): void;
    selectDate(d: any): void;
    increaseYear(): void;
    increaseMonth(): void;
    decreaseYear(): void;
    decreaseMonth(): void;
    selectionEmitter(d: any, isInit?: boolean): void;
    outputEvent(): void;
    getCurrentDate(): any;
    isSelectedDay(y: number, m: number, d: number, num: number): boolean;
    createEmptyDatePicker(): void;
    clearYearArray(): void;
    createYearArray(year: number): void;
    isDataDisabled(date: any): boolean;
    isDisabledMonth(month: number): boolean;
    isDisabledYear(year: number): boolean;
}
